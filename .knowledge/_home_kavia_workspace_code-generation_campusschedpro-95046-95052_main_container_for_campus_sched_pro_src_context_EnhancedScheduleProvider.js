{"is_source_file": true, "format": "JavaScript", "description": "This file defines a React context provider component for managing schedule data, including fetching data from a database, handling real-time updates, error handling, and connection status monitoring in a campus scheduling application.", "external_files": ["../utils/supabaseClient", "../utils/supabaseConnectionMonitor", "../utils/supabaseErrorHandler", "../utils/scheduleHelpers", "../hooks/useDataFetch"], "external_methods": ["supabase, fetchCourses, fetchFaculty, fetchRooms, fetchCourseScheduleView, cleanup", "getConnectionState, ConnectionState", "handleSupabaseError, isConnectionError", "findScheduleConflicts", "useDataFetch"], "published": ["useSchedule"], "classes": [], "methods": [{"name": "useSchedule()", "description": "Custom hook to access the schedule context.", "scope": "", "scopeKind": ""}, {"name": "EnhancedScheduleProvider({ children })", "description": "React component that provides schedule data, handles data fetching, real-time updates, and error handling.", "scope": "", "scopeKind": ""}, {"name": "showNotification", "description": "Callback to display notifications to the user."}, {"name": "handleCloseNotification", "description": "Callback to close notifications."}, {"name": "loadData", "description": "Function to fetch and refresh all schedule-related data, with error handling and conflict detection."}], "calls": ["useContext", "useState", "useEffect", "useCallback", "getConnectionState().subscribe", "supabase.channel().on()", "supabase.removeChannel()", "setState", "Promise.all", "findScheduleConflicts"], "search-terms": ["EnhancedScheduleProvider", "useSchedule", "schedule data fetching", "connection monitoring React", "real-time data updates schedule", "conflict detection campus schedule"], "state": 2, "file_id": 107, "knowledge_revision": 467, "git_revision": "e805b16c44a8fd84c9af130c9ecd6bf869e4c3b2", "revision_history": [{"373": "0863fa82174b2d11e16bae5245e21ef3545ebcb5"}, {"406": "574228625c08cde72b73d6fe9ff8b10503f952c8"}, {"417": "6324730e1fe2711ca4b5fa2dd4a727cfc2cb19fa"}, {"419": "27e1aad32e987f63d36d6271b7899ac4f3a9cf26"}, {"420": "a22f6ade42f31b026795197a7ab850c4f0071216"}, {"448": "8aa3acdfd7a61e577fe55085b73118e306563ae1"}, {"467": "e805b16c44a8fd84c9af130c9ecd6bf869e4c3b2"}], "ctags": [{"_type": "tag", "name": "EnhancedScheduleProvider", "path": "/home/kavia/workspace/code-generation/campusschedpro-95046-95052/main_container_for_campus_sched_pro/src/context/EnhancedScheduleProvider.js", "pattern": "/^export function EnhancedScheduleProvider({ children }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ children })"}, {"_type": "tag", "name": "ScheduleContext", "path": "/home/kavia/workspace/code-generation/campusschedpro-95046-95052/main_container_for_campus_sched_pro/src/context/EnhancedScheduleProvider.js", "pattern": "/^const ScheduleContext = createContext();$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "schedule", "path": "/home/kavia/workspace/code-generation/campusschedpro-95046-95052/main_container_for_campus_sched_pro/src/context/EnhancedScheduleProvider.js", "pattern": "/^    schedule,$/", "language": "JavaScript", "kind": "field", "scope": "EnhancedScheduleProvider.value", "scopeKind": "class"}, {"_type": "tag", "name": "useSchedule", "path": "/home/kavia/workspace/code-generation/campusschedpro-95046-95052/main_container_for_campus_sched_pro/src/context/EnhancedScheduleProvider.js", "pattern": "/^export function useSchedule() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "value", "path": "/home/kavia/workspace/code-generation/campusschedpro-95046-95052/main_container_for_campus_sched_pro/src/context/EnhancedScheduleProvider.js", "pattern": "/^    <ScheduleContext.Provider value={value}>$/", "language": "JavaScript", "kind": "field", "scope": "Provider", "scopeKind": "class"}], "filename": "/home/kavia/workspace/code-generation/campusschedpro-95046-95052/main_container_for_campus_sched_pro/src/context/EnhancedScheduleProvider.js", "hash": "fef92ffe0bf93578dbb43232a1771e4a", "format-version": 4, "code-base-name": "default", "fields": [{"name": "schedule,", "scope": "EnhancedScheduleProvider.value", "scopeKind": "class", "description": "unavailable"}, {"name": "<ScheduleContext.Provider value={value}>", "scope": "Provider", "scopeKind": "class", "description": "unavailable"}]}