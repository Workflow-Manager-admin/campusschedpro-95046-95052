{"is_source_file": false, "format": "", "description": "", "external_files": ["main.9b54e641.js", "react-router", "@remix-run/router", "phoenix", "phoenix framework github", "node-fetch polyfill", "react", "react-dom", "@mui/utils/generateUtilityClasses", "@mui/utils/generateUtilityClass", "../styles/styled", "../utils/capitalize", "../FormControl/formControlState", "../FormControl/useFormControl", "../DefaultPropsProvider", "../menus/menuClasses", "../popovers/popoverClasses", "../transitions/utils", "../utils/useForkRef", "../utils/ownerDocument", "../utils/ownerWindow", "../utils/debounce", "../utils/isHostComponent", "../utils/refType", "../utils/composeClasses", "../utils/useSlotProps", "../styles/useTheme", "../utils/getReactElementRef", "../utils/elementTypeAcceptingRef", "../utils/integerPropType", "../utils/chainPropTypes", "../utils/useTimeout", "../InputBase/inputBaseClasses", "../InputBase/InputBase", "../GlobalStyles", "@mui/system", "../utils/useEnhancedEffect", "../Internal SVG icons/ArrowDropDown", "../internal/svg-icons/SuccessOutlined", "../internal/svg-icons/ReportProblemOutlined", "../internal/svg-icons/ErrorOutline", "../internal/svg-icons/InfoOutlined", "../internal/svg-icons/Close", "../../utils/roomUtils", "../../context/ScheduleContext", "fs", "Base64_decode", "Base64_encode", "Buffer", "Buffer_from", "a2s", "s2a", "$cptable", "has_buf", "Deno", "File", "saveAs", "decode_cell", "prep_blob", "bconcat", "new_raw_buf", "parse_PropertySet", "set_cp", "CountryEnum", "parse_FILETIME", "parse_date", "parse_Date", "parse_bool", "parse_Blob", "parse_RkNumber", "parse_Xnum", "parse_XLUnicodeString", "parse_XLUnicodeRichExtendedString", "parse_XLUnicodeStringNoCch", "parse_RefU", "parse_Err", "write_Bes", "write_Xnum", "write_XLUnicodeString", "write_XLUnicodeRichExtendedString", "write_XLUnicodeStringNoCch", "write_TypedPropertyValue", "write_PropertySet", "write_PropertySetStream", "tagregex", "parsexmltag", "unescapexml", "escapehtml", "matchtag", "parse_uint16", "parse_XLWideString", "write_XLWideString", "recordhopper", "parsexmlbool", "keys", "table_fmt", "SSF_load", "CS2CP", "rgb_tint", "xmlregex", "xlsx", "react/jsx-runtime", "../common/BulkImportModal", "../../utils/excelUtils", "../../utils/createSvgIcon", "@mui/utils/composeClasses", "@mui/system/colorManipulator", "@mui/utils/useForkRef", "../internal/svg-icons/Cancel", "../utils/useDefaultProps", "@mui/utils/capitalize"], "external_methods": ["bd", "Af", "nb", "ob", "ta", "D", "Dk", "Gi", "Wj", "Yj", "Zj", "Vk", "uk", "Nk", "Fj", "Lj", "Mi", "Ji", "Qi", "Ui", "Si", "Ti", "Yk", "Jk", "$$", "Vg", "gj", "hj", "Xi", "Yi", "Gj", "Dj", "useInRouterContext", "useNavigate", "useLocation", "useResolvedPath", "useHref", "useMatch", "useParams", "useOutlet", "useOutlerContext", "useRoutes", "useNavigation", "useRevalidator", "createBrowserHistory", "createHashHistory", "createRouter", "joinPaths", "stripBasename", "parsePath", "generatePath", "matchPath", "matchRoutes", "redirect", "resolvePath", "createMemoryRouter", "createRoutesFromChildren", "createRoutesFromElements", "defer", "isRouteErrorResponse", "json", "getScrollRestorationKeyFunction", "warning", "console", "useOutletContext", "resolveFetch", "generateUtilityClasses", "generateUtilityClass", "styled", "capitalize", "formControlState", "useFormControl", "useDefaultProps", "getListUtilityClass", "getPopoverUtilityClass", "getMenuUtilityClass", "getNativeSelectUtilityClasses", "getScrollbarSize", "getReactElementRef", "ownerDocument", "refType", "useForkRef", "useEnhancedEffect", "isHostComponent", "createSvgIcon", "fs.readFileSync", "fs.writeFileSync", "Buffer.from", "Deno.writeFileSync", "Deno.readFileSync", "File", "Buffer.prototype.toString", "$cptable.utils.decode", "Buffer.readUInt32LE", "Buffer.readShift", "Buffer.slice", "Buffer.read_shift", "Buffer.concat", "Buffer_from", "Base64_decode", "decode_cell", "prep_blob", "bconcat", "new_raw_buf", "parse_PropertySet", "set_cp", "CountryEnum", "parse_FILETIME", "parse_date", "parse_Date", "parse_bool", "parse_Blob", "parse_RkNumber", "parse_Xnum", "parse_XLUnicodeString", "parse_XLUnicodeRichExtendedString", "parse_XLUnicodeStringNoCch", "parse_RefU", "parse_Err", "write_Bes", "write_Xnum", "write_XLUnicodeString", "write_XLUnicodeRichExtendedString", "write_XLUnicodeStringNoCch", "write_TypedPropertyValue", "write_PropertySet", "write_PropertySetStream", "Buffer.isBuffer", "has_buf", "a2s", "s2a", "cc2str", "utf8read", "encode_cell", "encode_range", "decode_range", "parseDate", "datenum", "SSF_format", "format_cell", "safe_decode_range", "parsexmltag", "parsexmlbool", "XLSX.utils.aoa_to_sheet", "XLSX.utils.book_new", "XLSX.utils.book_append_sheet", "XLSX.write", "XLSX.read", "XLSX.utils.sheet_to_json", "supabase.from", "supabase.select", "supabase.insert", "uuidv4", "saveAs"], "published": ["createBrowserRouter", "createHashRouter", "createMemoryRouter", "RouterProvider", "Router", "Routes", "HashRouter", "BrowserRouter", "createPath", "createRoutesFromChildren", "createRoutesFromElements", "defer", "matchPath", "matchRoutes", "renderMatches", "redirect", "resolvePath", "useActionData", "useAsyncError", "useAsyncValue", "useNavigate", "useLocation", "useMatch", "useParams", "useOutlet", "useOutletContext", "useRoutes", "useRevalidator", "useRouteError", "useRouteLoaderData", "useNavigation", "useInRouterContext", "MemoryRouter", "Navigate", "Outlet", "Route", "Link", "NavLink", "Form", "ScrollRestoration", "startTransition", "flushSync", "getDialogUtilityClass", "getPaperUtilityClass", "getTypographyUtilityClass", "getDialogTitleUtilityClass", "getDialogContentUtilityClass", "getFormLabelUtilityClasses", "getInputLabelUtilityClasses", "getFormControlUtilityClasses", "inputBaseClasses", "getInputBaseUtilityClass", "filledInputClasses", "getFilledInputUtilityClass", "outlinedInputClasses", "getOutlinedInputUtilityClass", "menuItemClasses", "getMenuItemUtilityClass", "dividerClasses", "getDividerUtilityClass", "listItemIconClasses", "getListItemIconUtilityClass", "listItemTextClasses", "getListItemTextUtilityClass", "formHelperTextClasses", "getFormHelperTextUtilityClasses", "Alert", "getAlertUtilityClass", "alertClasses", "IconButton", "getIconButtonUtilityClass", "iconButtonClasses", "RoomAllocation", "boxClasses", "getLinearProgressUtilityClass", "roomUtils", "ScheduleContext", "parse_blob", "write_num", "SSF_format", "CRC32", "parse", "write", "parse_zip", "write_zip", "cfb_add", "cfb_new", "zipentries", "zip_add_file", "generateCourseTemplate", "generateFacultyTemplate", "generateRoomTemplate", "importCoursesFromExcel", "importRoomsFromExcel", "importFacultyFromExcel"], "classes": [{"name": "ReScript", "description": "Class for WebSocket message serialization/deserialization, heavily inspired by Phoenix framework's serialization."}, {"name": "Timer", "description": "Utility class for exponential backoff timers with customizable retry intervals."}, {"name": "Push", "description": "Class to handle WebSocket push events with timeout, response handling, and lifecycle management."}, {"name": "FunctionsClient", "description": "Client for invoking serverless functions with customizable headers, body types, and region support."}, {"name": "Serializer", "description": "Custom serialization/deserialization utility for WebSocket messages, inspired by Phoenix framework's protocol."}, {"name": "RealtimeChannel", "description": "Handles real-time communication channels, subscriptions, presence, and event handling for a WebSocket connection."}, {"name": "RealtimePresence", "description": "Manages presence information within channels, handling synchronization, join/leave events, and state diffing."}, {"name": "InputBase", "description": "React component providing the foundational input with styling, state management, and accessibility features, based on Material-UI's InputBase."}, {"name": "Input", "description": "Material-UI styled input component built upon InputBase, with support for adornments, underline style, and focus states."}, {"name": "FilledInput", "description": "Styled input component with filled variant, supporting focus, error, disabled states, and underline management."}, {"name": "OutlinedInput", "description": "Outlined style input component, with notched border for labels, support for focus, error, disabled, and multiline."}, {"name": "NotchedOutline", "description": "Internal component rendering the notched outline border used in OutlinedInput."}, {"name": "MenuItem", "description": "Component representing a menu item, used within menu or select components, with styling for states like focus, disabled, selected."}, {"name": "Box", "description": "React component creating a stylized container with theme support, for layout purposes."}, {"name": "LinearProgress", "description": "Material-UI LinearProgress component for showing determinate and indeterminate progress bars with customizable styling and animation."}, {"name": "alertClasses", "description": "CSS classes for the Alert component, providing styling for different statuses."}, {"name": "iconButtonClasses", "description": "CSS classes related to styling of IconButton components, including size, color, and shape variants."}, {"name": "CFB", "description": "Functions and classes for reading and writing Compound File Binary (CFB/OLE) formats, including parsing, accessing entries, and serialization."}, {"name": "Chip", "description": "UI component from Material-UI library managing visual styles and interactive behavior for chip elements, with internal styling based on variants, sizes, colors, and states."}], "methods": [{"name": "queryRoute", "description": "Handles route matching, validation, and data loading for a given request, throwing appropriate errors for invalid methods or unmatched routes."}, {"name": "queryImpl", "description": "Performs the core logic of querying route data, including handling mutations, loading data, and error handling."}, {"name": "submit", "description": "Handles form submissions or mutations, including validation and constructing the appropriate request objects."}, {"name": "loadRouteData", "description": "Loads data for specific route matches, invoking loaders and handling errors and deferred data."}, {"name": "callDataStrategy", "description": "Invokes the provided data strategy (e.g., parallel loader fetching) to retrieve route data."}, {"name": "callLoaderOrAction", "description": "Executes a route's loader or action, handling lazy loading and errors."}, {"name": "convertDataStrategyResultToDataResult", "description": "Converts raw fetch/response data into a standardized DataResult object."}, {"name": "normalizeTo", "description": "Resolves relative route paths into absolute paths based on current route matches and settings."}, {"name": "normalizeNavigateOptions", "description": "Normalizes navigation options, particularly form submissions, into a standardized format."}, {"name": "getLoaderMatchesUntilBoundary", "description": "Filters route matches up to a specified boundary route for error handling or revalidation."}, {"name": "findNearestBoundary", "description": "Finds the closest ancestor route boundary (error boundary) for error handling."}, {"name": "getInternalRouterError", "description": "Creates standardized error objects for various HTTP status codes and scenarios."}, {"name": "normalizeRelativeRoutingRedirectResponse", "description": "Adjusts redirect responses' Location headers for relative URLs."}, {"name": "createClientSideRequest", "description": "Constructs a Request object for client-side navigation or fetches, incorporating form data and submission details."}, {"name": "createSearchParams", "description": "Creates a URLSearchParams object using the given initializer supporting arrays and objects."}, {"name": "getSearchParamsForLocation", "description": "Merges location search string with default search parameters to produce final URLSearchParams."}, {"name": "getFormSubmissionInfo", "description": "Extracts method, action, encType, and body information from a form or form submitter element."}, {"name": "createSearchParams", "description": "Creates a URLSearchParams object supporting arrays and objects."}, {"name": "getSearchParamsForLocation", "description": "Merges location search string with default search parameters."}, {"name": "getFormSubmissionInfo", "description": "Extracts method, action, encType, and body information from a form element."}, {"name": "useUtilityClasses", "description": "Computes and returns CSS class names based on component state for Input and InputBase components."}, {"name": "getInputUtilityClass", "description": "Generates utility CSS class names specific to 'MuiInput' slots."}, {"name": "useUtilityClasses", "description": "Computes and returns CSS class names based on owner state for various Input and FilledInput components."}, {"name": "getFilledInputUtilityClass", "description": "Generates utility CSS class names specific to 'MuiFilledInput' slots."}, {"name": "getOutlinedInputUtilityClass", "description": "Generates utility CSS class names specific to 'MuiOutlinedInput' slots."}, {"name": "getInputBaseUtilityClass", "description": "Generates utility class names for base input component."}, {"name": "getInputUtilityClass", "description": "Generates utility class names for Input component."}, {"name": "getOutlinedInputUtilityClass", "description": "Generates utility class names for OutlinedInput component."}, {"name": "useUtilityClasses", "description": "Computes and returns CSS class names based on component owner state for styling."}, {"name": "getLinearProgressUtilityClass", "description": "Generates utility CSS class names for various slots of the LinearProgress component based on provided slot name."}, {"name": "createBox", "description": "Creates a styled Box component with theme integration, supporting custom component types and system overrides."}, {"name": "parse", "description": "Parses a raw byte array or buffer into a compound file object, handling different file formats like ZIP, MAD, and OLE2."}, {"name": "write", "description": "Serializes a CFB object into a binary format, supporting various output types such as buffer, base64, or file."}, {"name": "crc32_str", "description": "Computes CRC32 checksum for a string."}, {"name": "parse_zip", "description": "Parses a ZIP file buffer or binary data into a CFB (Compound File Binary) container object, extracting entries and directory structure."}, {"name": "write_zip", "description": "Creates a ZIP archive buffer from a CFB container, writing files, directories, and central directory entries."}, {"name": "cfb_add", "description": "Adds a file entry to a CFB container, with associated content and optional metadata."}, {"name": "cfb_new", "description": "Creates a new, empty CFB container."}, {"name": "zipentries", "description": "Returns a sorted list of the full file paths within the ZIP archive."}, {"name": "zip_add_file", "description": "Adds a file with specified path and content data to the ZIP archive."}, {"name": "parse_rpr", "description": "Parses rich text run properties, extracting font styles, colors, shadows, etc."}, {"name": "parse_rs", "description": "Parses a sequence of <r> tags into HTML or structured representation, handling styles and line breaks."}, {"name": "parse_si", "description": "Parses a rich string item, extracting text and formatting for display or processing."}, {"name": "parse_sst_xml", "description": "Parses shared string table XML data into an array of string objects."}, {"name": "write_sst_xml", "description": "Serializes shared string table data into XML format for storage."}, {"name": "parse_BrtBeginSst", "description": "Parses beginning of shared string table from binary data."}, {"name": "parse_sst_bin", "description": "Parses binary shared string table records into usable in-memory structures."}, {"name": "write_BrtFmt", "description": "Serializes a number format record into binary format."}, {"name": "parse_BrtFont", "description": "Parses font details including size, color, and style from binary data."}, {"name": "write_BrtFont", "description": "Serializes font details into binary format for writing."}, {"name": "parse_BrtFill", "description": "Parses fill styles (solid, pattern, gradient) from binary data."}, {"name": "write_BrtFill", "description": "Serializes fill styles into binary format."}, {"name": "parse_BrtBorder", "description": "Placeholder for parsing border styles (not implemented)."}, {"name": "write_BrtBorder", "description": "Serializes border styles into binary format."}, {"name": "parse_BrtStyle", "description": "Serializes a style object including formatting information."}, {"name": "write_BrtStyle", "description": "Serializes style object into binary."}, {"name": "write_BrtBeginTableStyles", "description": "Initializes binary data for table styles."}, {"name": "parse_sty_bin", "description": "Parses packed binary style data, including number formats, fonts, fills, borders, and cell styles."}, {"name": "write_sty_bin", "description": "Serializes style structures into binary data for storage or transfer."}, {"name": "parse_clrScheme", "description": "Parses a color scheme element from theme XML, storing color information."}, {"name": "parse_fontScheme", "description": "Placeholder for parsing font scheme data from theme XML."}, {"name": "parse_fmtScheme", "description": "Placeholder for parsing format scheme data from theme XML."}, {"name": "parse_themeElements", "description": "Parses theme element XML data such as colors, fonts, and formats."}, {"name": "parse_theme_xml", "description": "Parses theme XML data, extracting theme elements such as color schemes, font schemes, and format schemes."}, {"name": "write_theme", "description": "Serializes theme data into XML format, including color schemes, font schemes, fill styles, line styles, effect styles, scene 3D, background fill, and object defaults."}, {"name": "parse_Theme", "description": "Parses the theme part from XLSX archives, extracts theme XML, and processes it into internal theme representation."}, {"name": "parse_ColorTheme", "description": "Parses a color theme element from theme XML, returning a color value."}, {"name": "parse_FullColorExt", "description": "Parses extended color information, including tint/shade and color values."}, {"name": "parse_ExtProp", "description": "Parses extension properties in style binary records."}, {"name": "parse_XFExt", "description": "Parses extended format records in style binary data."}, {"name": "update_xfext", "description": "Updates formatting extension data based on parsed extension properties."}, {"name": "parse_BrtMdtinfo", "description": "Parses metadata info structures from binary data."}, {"name": "write_BrtMdtinfo", "description": "Serializes metadata info structures into binary buffers."}, {"name": "parse_BrtMdb", "description": "Parses a metadata database list from binary data."}, {"name": "write_BrtMdb", "description": "Serializes a metadata database list into binary."}, {"name": "write_BrtBeginEsfmd", "description": "Creates a binary record indicating the beginning of an EsfMetaData section."}, {"name": "parse_BrtBeginEsmdb", "description": "Parses the start of an Esm database record."}, {"name": "write_BrtBeginEsmdb", "description": "Serializes the start of an Esm database record."}, {"name": "parse_xlmeta_bin", "description": "Parses custom binary metadata structures in Excel files, including types, cell info, and values."}, {"name": "write_xlmeta_bin", "description": "Serializes custom metadata structures into binary records."}, {"name": "parse_xlmeta_xml", "description": "Parses XML-based metadata, extracting types, cell metadata, value metadata, etc."}, {"name": "write_xlmeta_xml", "description": "Serializes metadata into XML format for storage."}, {"name": "parse_cc_xml", "description": "Parses calculation chain XML, extracting formula dependencies."}, {"name": "parse_cc_bin", "description": "Parses binary calculation chain data."}, {"name": "parse_xlink_xml", "description": "Parses external link XML data."}, {"name": "parse_xlink_bin", "description": "Parses external link binary data."}, {"name": "parse_drawing", "description": "Parses drawing and graphic elements in spreadsheets, such as charts and embedded objects."}, {"name": "write_comments_vml", "description": "Generates VML (Vector Markup Language) for spreadsheet comments."}, {"name": "sheet_insert_comments", "description": "Inserts comments into worksheet data structures, managing cell references and range adjustments."}, {"name": "parse_comments_xml", "description": "Parses comment XML data into internal comment objects."}, {"name": "write_comments_xml", "description": "Serializes comments into XML format suitable for spreadsheets."}, {"name": "parse_tcmnt_xml", "description": "Parses threaded comments XML."}, {"name": "write_tcmnt_xml", "description": "Serializes threaded comments into XML."}, {"name": "parse_people_xml", "description": "Parses people/authors XML data associated with comments."}, {"name": "write_people_xml", "description": "Serializes people/authors data into XML format."}, {"name": "parse_BrtBeginComment", "description": "Parses the beginning of a comment record from binary data."}, {"name": "write_BrtBeginComment", "description": "Serializes a comment start record into binary."}, {"name": "parse_BrtCommentAuthor", "description": "Parses a comment author string from wide string."}, {"name": "write_BrtCommentAuthor", "description": "Serializes a comment author into wide string."}, {"name": "parse_comments_bin", "description": "Parses binary comment data, extracting comment metadata and text."}, {"name": "write_comments_bin", "description": "Serializes comment data into binary format."}, {"name": "make_vba_xls", "description": "Constructs a CFB container embedding VBA projects for Excel macros."}, {"name": "fill_vba_xls", "description": "Inserts VBA project files into a CFB container."}, {"name": "parse_ds_bin", "description": "Placeholder for parsing dialog sheet binary data."}, {"name": "parse_ds_xml", "description": "Placeholder for parsing dialog sheet XML data."}, {"name": "parse_ms_bin", "description": "Placeholder for parsing macro sheet binary data."}, {"name": "parse_ms_xml", "description": "Placeholder for parsing macro sheet XML data."}, {"name": "rc_to_a1", "description": "Converts RC-style references to A1-style cell notation, supporting relative and absolute references."}, {"name": "a1_to_rc", "description": "Converts A1 style references to RC notation, supporting relative and absolute references."}, {"name": "shift_formula_str", "description": "Shifts cell references within formulas by delta."}, {"name": "shift_formula_xlsx", "description": "Adjusts cell references in formulas based on range and cell positions."}, {"name": "fuzzyfmla", "description": "Basic check if a formula string appears to be complex / approximate."}, {"name": "_xlfn", "description": "Removes Excel-specific function extensions from formula string."}, {"name": "parse_RgbExtra", "description": "Parses extended color information including tint, shade, and color values from a binary blob."}, {"name": "parse_Rgce", "description": "Parses spreadsheet formula binary records, handling various token types for formula serialization."}, {"name": "stringify_array", "description": "Converts a nested array of formula tokens into a string representation."}, {"name": "parse_Formula", "description": "Parses a cell's formula, reading from binary data and converting to an internal representation."}, {"name": "write_Formula", "description": "Serializes a cell and its formula into binary format."}, {"name": "createAndDownloadTemplate", "description": "Creates an Excel file template with specified headers and example data, and triggers a download using FileSaver."}, {"name": "generateCourseTemplate", "description": "Generates and prompts download of a course template Excel file with headers and one example row."}, {"name": "generateFacultyTemplate", "description": "Generates and prompts download of a faculty template Excel file."}, {"name": "generateRoomTemplate", "description": "Generates and prompts download of a room template Excel file."}, {"name": "readExcelFile", "description": "Reads a given Excel file and converts it into an array of data rows."}, {"name": "importCoursesFromExcel", "description": "Processes an Excel file to import course data, adding records to the database, creating departments as needed, and reports success/error counts."}, {"name": "importRoomsFromExcel", "description": "Processes an Excel file to import room data, creating building entries as needed, and reports success/error counts."}, {"name": "importFacultyFromExcel", "description": "Processes an Excel file to import faculty data, creating departments as needed, and reporting success/error counts."}, {"name": "getOrCreateDepartmentId", "description": "Checks if a department exists in the database; if not, creates a new one and returns its ID."}, {"name": "getOrCreateBuildingId", "description": "Checks if a building exists; if not, creates a new one and returns its ID."}], "calls": ["bd", "Af", "nb", "ob", "ta", "D", "Gi", "Wj", "Yj", "Zj", "Nk", "Fj", "Lj", "Mi", "Ji", "Qi", "Ui", "Si", "Ti", "Yk", "Jk", "Vg", "gj", "hj", "Xi", "Yi", "Gj", "Dj", "queryRoute", "queryImpl", "submit", "loadRouteData", "callDataStrategy", "callLoaderOrAction", "convertDataStrategyResultToDataResult", "normalizeTo", "getLoaderMatchesUntilBoundary", "findNearestBoundary", "getInternalRouterError", "normalizeRelativeRoutingRedirectResponse", "createClientSideRequest", "createRouter", "createBrowserHistory", "createHashHistory", "parsePath", "matchPath", "matchRoutes", "redirect", "resolvePath", "createMemoryRouter", "createRoutesFromChildren", "createRoutesFromElements", "defer", "json", "warning", "useNavigate", "useLocation", "useMatch", "useParams", "useOutlet", "useOutletContext", "useRoutes", "useRevalidator", "useRouteError", "useRouteLoaderData", "useNavigation", "useInRouterContext", "startTransition", "flushSync", "useDefaultProps", "useFormControl", "useForkRef", "useEnhancedEffect", "createSvgIcon", "composeClasses", "styled", "generateUtilityClass", "generateUtilityClasses", "createTheme", "RefType", "crc32_str", "Base64_decode", "Base64_encode", "fs.readFileSync", "fs.writeFileSync", "realloc", "buffer.readUInt32LE", "buffer.readUInt16LE", "Buffer.prototype.toString", "Buffer.concat", "Buffer_from", "$cptable.utils.decode", "Deno.writeFileSync", "Deno.readFileSync", "File", "buffer.readShift", "Buffer.isBuffer", "a2s", "cc2str", "utf8read", "encode_cell", "decode_cell", "encode_range", "decode_range", "parseDate", "datenum", "SSF_format", "format_cell", "safe_decode_range", "parsexmltag", "parsexmlbool", "recordhopper", "parse_XLWideString", "write_XLWideString", "SSF_load", "rgb_tint", "XLSX.utils.aoa_to_sheet", "XLSX.utils.book_new", "XLSX.utils.book_append_sheet", "XLSX.write", "supabase.from", "supabase.select", "supabase.insert", "XLSX.read", "XLSX.utils.sheet_to_json", "saveAs"], "search-terms": ["main.9b54e641.js.map", "build_static_js", "source map", "JavaScript source map", "minified JavaScript", "source-mapping URL", "React routing", "loader loaderData loader headers", "route matching", "route boundary", "error boundary", "revalidation", "loader loading", "route lazy loading", "relative path resolution", "server-side routing", "client-side navigation", "fetcher revalidation", "data strategy", "RedirectResponse", "ErrorResponseImpl", "Dynamic route loading", "route boundary error handling", "React Router", "remix-router", "client-side routing", "react-router-dom", "createBrowserRouter", "createHashRouter", "Link component", "NavLink", "Form handling", "scroll restoration", "router context", "deferred data", "server-side hydration", "React context", "bundle", "module aggregation", "WebSocket", "Phoenix serialization", "realtime communication", "presence", "serverless functions", "react hooks", "history API", "browser history", "state management", "channel subscriptions", "Material-UI Input component", "React forwarded refs", "styled components", "Input adornments", "underlined input style", "global styles for input", "controlled vs uncontrolled input", "InputBase styling", "PropTypes validation for Input components", "input focus management", "input global style injection", "material-ui input with underline", "Custom input component with React and MUI", "accessibility features in MUI input", "Material-UI Input components", "styled input variants", "InputBase foundation component", "filled variant input styling", "outlined variant input with notched border", "Input component with support for adornments", "focus and error styles in Material-UI", "global style injection for Input elements", "Material-UI class name generation", "Input ref forwarding and accessibility", "React component composition for inputs", "FormHelperText styling", "DialogActions layout", "Alert component styles and behavior", "IconButton customization", "SVG icons for status indicators", "Room allocation React component", "Room assignment and management", "Material-UI Box component", "LinearProgress styling", "React theme-based component styles", "Material-UI utility class generation", "React component creation with styled-components", "Progress indicator with determinate and indeterminate modes", "CSS class composition for UI components", "Excel CFB parser", "Spreadsheet zlib decompress", "compound file binary", "Excel format utilities", "bit level compression", "Huffman tree build", "Excel format string parsing", "Zlib deflate/inflate", "CRC checksum JavaScript", "ZIP file parsing JavaScript", "Excel ZIP archive handling", "Compound File Binary ZIP", "spreadsheet binary parsing", "Office document ZIP extraction", "XML content decoding", "Spreadsheet ZIP writer", "binary data handling Office", "Office file content type mapping", "Excel cell encoding", "XML Office properties parsing", "Office document relationships parsing", "Spreadsheet ML content", "OpenDocument metadata handling", "Office ZIP package parsing", "MS Office custom properties", "Office file properties encoding", "SpreadsheetML range encoding", "Office content type management", "Office document metadata XML", "Legacy spreadsheet formats parsing", "DBF file handling", "SYLK format decoding", "PRN format reading", "WK1/WK3 legacy formats", "ETH spreadsheet format", "Office theme parsing", "Shared string table binary", "XLSB style binary", "Office encryption headers", "Rich text parsing", "RTF to worksheet", "Office theme color schemes", "Document style serialization", "Legacy file encryption", "Office style and font processing", "bulk import Excel campus rooms", "generate room template", "import course Excel", "supabase department", "xlsx sheet to JSON", "React bulk upload", "Campus schedule management"], "state": 2, "file_id": 118, "knowledge_revision": 441, "git_revision": "", "filename": "/home/kavia/workspace/code-generation/campusschedpro-95046-95052/main_container_for_campus_sched_pro/build/static/js/main.9b54e641.js.map", "hash": "4cfd6f11f75dcd95818e32eece4bf225", "format-version": 4, "code-base-name": "default", "revision_history": [{"441": ""}]}